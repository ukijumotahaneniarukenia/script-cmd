#!/usr/bin/env bash

usage(){
cat <<EOS
Usage:
  CATEGORY_NAME_LIST:

  C C Cc Cf Cn Co Cs
  L L LC Ll Lm Lo Lt Lu
  M M Mc Me Mn
  N N Nd Nl No
  P P Pc Pd Pe Pf Pi Po Ps
  S S Sc Sk Sm So
  Z Z Zl Zp Zs


   IN: ${0##*/} Lu
  OUT:

EOS

exit 0

}

CATEGORY_NAME="$1";shift;

if [ -z "$CATEGORY_NAME" ];then

  usage

fi

perl -C -MUnicode::UCD -E '$,="\t";($c)=@ARGV;($i,$r)=Unicode::UCD::prop_invmap($c);@a=@{$i};map{say @{$i}[$_],@{$r}[$_]}(0..$#a)' $CATEGORY_NAME | \
	awk -v FS="\t" '$2=="N"{print 0,$1,$2}$2=="Y"{print 1,$1,$2}' | \
	awk '{print a=a+$1,$2,$3}' | \
	jq -Rc 'split(" ")' | \
	jq -s 'group_by(.[0])[]|((map(.[0])|unique|join("")),(map(.[1])|join("-")),(map(.[2])|join("-")))' | \
	xargs -n3 | \
	sort -nk1 | \
	grep -Po '[0-9]+ (?!Y)[0-9Y]+-[0-9N]+' | \
	ruby -anle 'puts $F[0],$F[1].split("-").join("\n")' | \
	xargs -n3 | \
	perl -C -MString::Random -anlE '($k,$s,$e)=@F;$l=$l+($e-$s);$t=sprintf(qq/\\x{%X}-\\x{%X}/,$s,$e-1);push(@b,$t);END{say eval"String::Random->new->randregex("."\"[".(join "",@b)."]{".$l."}"."\")"}' 2>/dev/null
