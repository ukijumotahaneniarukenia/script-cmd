#!/usr/bin/env bash

usage(){
cat <<EOS
Usage:
   IN: $0 {A..C}{A..C}
  OUT:
       [['@@' 'AA' 'AB' 'AC' 'BA' 'BB' 'BC' 'CA' 'CB' 'CC']
        ['AA' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['AB' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['AC' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['BA' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['BB' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['BC' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['CA' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['CB' '--' '--' '--' '--' '--' '--' '--' '--' '--']
        ['CC' '--' '--' '--' '--' '--' '--' '--' '--' '--']]

EOS

exit 0

}

PATTERN_LIST="$@";shift;

if [ -z "$PATTERN_LIST" ];then

  usage

fi

echo "${PATTERN_LIST}" | opy -m numpy 'B:{import os;import numpy as np;f="a.tsv";};{a=np.array([F[1:]]);b=np.zeros((len(a[0]),len(a[0])));c=np.concatenate([a,b],axis=0);d=np.array([["@"*len(F[1:][0]),*F[1:]]]).T};E:{e=np.concatenate([d,c],axis=1);r=np.where(e=="0.0","-"*len(F[1:][0]),e);print(r)};E:{np.savetxt(f, r, fmt="%s",delimiter="\t",encoding="utf-8")}'
